---
import BaseHead from "../components/BaseHead.astro";
import Body from "../components/Body.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import Content from "../components/Content.astro";
import FormattedDate from "../components/FormattedDate.astro";
import TableOfContents from "../components/TableOfContents.astro";
import "/node_modules/katex/dist/katex.min.css";

import "../styles/BlogPost.css"

const post = Astro.props;
const { headings } = await post.render();
const { title, description, pubDate, updatedDate, heroImage = '' } = Astro.props["data"];
---
<script>
    const observer = new MutationObserver(addPreCopyButton);
    observer.observe(document.body, { childList: true, subtree: true });

    document.addEventListener("DOMContentLoaded", addPreCopyButton);

    function addPreCopyButton() {
        observer.disconnect();

        let codeBlocks = Array.from(document.querySelectorAll("pre"));

        for (let codeBlock of codeBlocks) {
            if (
                codeBlock.parentElement?.nodeName === "DIV" &&
                codeBlock.parentElement?.classList.contains("code-block")
            )
                continue;

            let wrapper = document.createElement("div");
            wrapper.className = "relative code-block";

            let copyButton = document.createElement("button");
            copyButton.className =
                "copy-code btn-regular absolute top-0 right-0 text-sm px-3 py-2 rounded-bl-lg rounded-tr-lg opacity-75 hover:opacity-100 transition-all duration-200 ease-in-out";
            copyButton.textContent = "Copy";

            codeBlock.setAttribute("tabindex", "0");
            if (codeBlock.parentNode) {
                codeBlock.parentNode.insertBefore(wrapper, codeBlock);
            }

            wrapper.appendChild(codeBlock);
            wrapper.appendChild(copyButton);

            copyButton.addEventListener("click", async () => {
                let text = codeBlock?.querySelector("code")?.innerText;

                await navigator.clipboard.writeText(text);

                copyButton.textContent = "Code Copied";
                copyButton.classList.toggle("opacity-100");

                setTimeout(() => {
                    copyButton.textContent = "Copy";
                    copyButton.classList.toggle("opacity-100");
                }, 700);
            });
        }

        observer.observe(document.body, { childList: true, subtree: true });
    }
</script>

<html lang="en">
    <head>
        <BaseHead title={title} description={description} image={heroImage} />
    </head>

    <Body>
        <Header />
        <main class="pt-[80px]">
            <Content>
                <div class="container">
                    <div>
                        {
                            heroImage ? (
                                <div class="hero-image">
                                    <img
                                        src={heroImage}
                                        alt=""
                                    />
                                    <div class="title-wrapper text-zinc-300">
                                        <div class="date">
                                            <FormattedDate date={pubDate} />
                                            {
                                                updatedDate && (
                                                    <div class="last-updated-on">
                                                        Last updated on{" "}
                                                        <FormattedDate date={updatedDate} />
                                                    </div>
                                                )
                                            }
                                        </div>
                                        <h1>{title}</h1>
                                    </div>
                                </div>
                                <div class="prose">
                                    <slot />
                                </div>
                            ) : (
                                <div class="prose">
                                    <div class="title">
                                        <div class="date">
                                            <FormattedDate date={pubDate} />
                                            {
                                                updatedDate && (
                                                    <div class="last-updated-on">
                                                        Last updated on{" "}
                                                        <FormattedDate date={updatedDate} />
                                                    </div>
                                                )
                                            }
                                        </div>
                                        <h1>{title}</h1>
                                        <hr />
                                    </div>
                                    <slot />
                                </div>
                            )
                        }
                    </div>
                    <TableOfContents headings={headings} title={title} />
                </div>
            </Content>
        </main>
        <Footer />
    </Body>
</html>
